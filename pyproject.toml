[tool.poetry]
name         = 'rx_selection'
description  = 'Project used to apply selection to ntuples used for RX measurements filtered and skimmed by post_ap project'
version      = '0.1.9'
readme       = 'README.md'
package-mode = true 
packages     = [
{include='rx_selection',      from='src'},
{include='rx_selection_data', from='src'}]

[[tool.poetry.include]]
path = "src/rx_selection_data/**/*.yaml"
format = "wheel"

[tool.poetry.dependencies]
python                     = '>=3.10,<3.13'
numexpr                    = {version = '>=0.0.0'}
jacobi                     = {version = '>=0.0.0'}
joblib                     = {version = '>=0.0.0'}
pandas                     = {version = '>=0.0.0'}
numpy                      = {version = '>=0.0.0'}
matplotlib                 = {version = '>=0.0.0'}
rx_common                   = { git = 'ssh://git@gitlab.cern.ch:7999/rx_run3/rx_common.git',     optional = true, branch = 'master'}
ap_utilities                = { git = 'ssh://git@gitlab.cern.ch:7999/rx_run3/ap_utilities.git',  optional = true, branch = 'master'}
data-manipulation-utilities = { git = 'ssh://git@gitlab.cern.ch:7999/rx_run3/dmu.git',           optional = true, branch = 'master'}

[tool.poetry.extras]
ana = ['rx_common', 'ap_utilities', 'data-manipulation-utilities']

[tool.poetry.group.dev.dependencies]
pytest  = '*'

[build-system]
requires      = [
    'poetry-core>=1.0.0',
    'poetry-dynamic-versioning>=1.0.0'
]
build-backend = 'poetry_dynamic_versioning.backend'

[tool.poetry-dynamic-versioning]
enable       = true
vcs          = 'git'
style        = 'pep440'
pattern      = 'default-unprefixed'
format-jinja = """
{%- if distance == 0 -%}
{{ base }}
{%- else -%}
{{ serialize_pep440(bump_version(base), dev=distance) }}
{%- endif -%}
"""

[tool.poetry.scripts]
apply_selection ='rx_selection_scripts.apply_selection:main'
make_jobs_list  ='rx_selection_scripts.make_jobs_list:main'
validate_sample ='rx_selection_scripts.validate_sample:main'
jmanager_ihep   ='rx_selection_scripts.jmanager_ihep:main'
